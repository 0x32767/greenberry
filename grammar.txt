statements: basic | simple | compound

basic: assign
simple: print, conditionals, for, plot 
compound: func, class

(basic)

assign:

numbers: var x = 1
strings: var y = string this is a string
words: var z = berry
var_refs: var a = @ b
booleans: var c = bool true/false/1/0
arrays: var num_arr = [1,2,3,4,5]

(simple)

print:

words: print word
var_refs: print @ x/@ num_arr/@ num_arr[1]
strings: print string now printing a string
and evaluate: print eval (1+2+3)

conditionals:

equality: if word = word print yes
greater: if @ x > 1 print string x is greater than 1
less: if 2 < @ y print num_arr[1] 

for:

words: for 1 times : print greenBerry
strings: for 2 times : print string greenBerry is great
var_refs: for 3 times : print @ x/@ num_arr/@ num_arr[1]

plot :

plot 1,2,3,4,5 x-time 6,7,8,9,10 y-words

func :
	declaration
	'func'  word  ':'  print

	with parameters
	'func'  'p'  (word*1+)  ':'  print
		'func'  'p'  word  ':'  print
		'func'  'p'  word  word  ':'  print

	call
	'call'  id

statement :
	(var_ref | number)

identifier :
	('bool' ('true' | 'false') 
	| 'string' (word*0+) 
	| '@' var_ref)

var_ref :
	('@' id
	| '@' id '[' number ']'
	| '@' id '[' number ',' number ]')

